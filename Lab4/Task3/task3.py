# Задание 3. Вариант 3.
# Видеопосты. Поликарп снял n видео, продолжительность i-го
# видео – ai секунд. Видео перечислены в хронологическом порядке, т.е. 1-е
# видео – самое раннее, 2-е видео – следующее, ..., n-е – последнее.
# Теперь Поликарп хочет опубликовать в Инстабрам ровно k (1 <= k <= n)
# постов. Каждое видео должно быть частью одного поста. Посты должны
# сохранять хронологический порядок, то есть первый пост должен содержать
# одно или несколько самых ранних видео, второй пост должен содержать блок
# (одно или несколько видео), идущий следом, и так далее. Другими словами,
# если количество видео в j-ом посте равно sj, то:
# • s1 + s2 + ... + sk = n (si > 0),
# • первый пост содержит видео: 1, 2, ..., s1 ;
# • второй пост содержит видео: s1 + 1, s1 + 2, ..., s1 + s2 ;
# • третий пост содержит видео: s1 + s2 + 1, s1 + s2 + 2, ..., s1 + s2 + s3 ;
# • ...
# • k-й пост содержит видео: n − sk + 1, n − sk + 2, ..., n.
# Поликарп – перфекционист, он хочет, чтобы общая продолжительность
# видео в каждом посте была одинаковой.
# Помогите Поликарпу найти такие целые положительные значения
# s1, s2 , ..., sk, которые удовлетворяют всем условиям выше.
#
# Формат входных данных
# Первая строка содержит два целых числа n и k (1 <= k <= n <= 10^5).
# Следующая строка содержит n целых положительных чисел a1, a2 , ..., an
# (1 <= ai <= 10^4), где ai – продолжительность i-го видео.
#
# Формат выходных данных
# Если решение существует, выведите «Да» в первой строке. Выведите k
# целых положительных чисел во второй строке. Общая продолжительность
# видео в каждом посте должна быть одинаковой. Можно легко доказать, что
# ответ уникален (если он существует).
# Если решения нет, выведите единственную строку «Нет».
#
# Пример входных и выходных файлов
# task3.in          task3.out
# 6 3               Да
# 3 3 1 4 1 6       2 3 1
#
# 3 3               Да
# 1 1 1             1 1 1
#
# 3 3               Нет
# 1 1 2
#
# 3 1               Да
# 1 10 100          3

# В итоге задача сводится к следующему:
# Дан список чисел. Найти в списке k различных подсписков, сумма чисел которых равна.

def equalSumSublists(k, array):
	total = sum(array) + 1
	for target in range(min(array), total):
		a = []
		c = []
		s = 0
		for x in array:
			if s + x > target:
				break
			s += x
			c += [x]
			if s == target:
				a += [c]
				c = []
				s = 0
		else:
			if s == 0 and len(a) == k:
				return a


k_nums = []
with open("task3.in.txt", "r") as f_in:
	all_lines = f_in.readlines()
	for i in range(0, len(all_lines), 3):
		nk = all_lines[i].split()
		nk = [int(i) for i in nk]
		numbers = all_lines[i+1].split()
		numbers = [int(i) for i in numbers]
		k_nums.append(tuple([nk[1], numbers]))

with open("task3.out.txt", "w", encoding="utf8") as f_out:
	for elem in k_nums:
		sublists = equalSumSublists(elem[0], elem[1])
		if sublists:
			print(f"k={elem[0]} {elem[1]} -> {sublists}")
			f_out.write("Да\n")
			for sub in sublists:
				f_out.write(f"{len(sub)} ")
			f_out.write('\n\n')
		else:
			print("Нет")
			f_out.write('Нет\n\n')
